@import 'colors';
@import 'mixins';

//container for a label + input/select
.control {
    $baseHeight: 2.5rem;
    $padding: 0.3rem;
    $innerHeight: $baseHeight - (2 * $padding);
    $focusBorderColor: $accent-cyan;

    height: $baseHeight;
    vertical-align: middle;
    margin-bottom: 0.5rem;

    > * {
        line-height: $innerHeight;
        height: 100%;
        transition: border 0.2s;
    }

    label {
        width: 25%;
        float: left;
        text-align: right;
        font-size: 1.1rem;
        padding-right: 0.5rem;
        border-radius: 0.2rem 0 0 0.2rem;
        white-space: nowrap;
    }
    input, select {
        background: $background-dark;
        width: 75%;
        color: white;
        font-size: 1.4rem;
        border: none;
        border-bottom: 0.2rem solid white;
        padding-left: 0.5rem;
        &:focus {
            border-color: $focusBorderColor;
            outline: none;
        }
        &.dirty {
            border-color: material-color('amber', '500');
        }
        &.invalid {
            border-color: material-color('red', '500');
        }
        &.valid {
            border-color: material-color('green', '500');
        }
        &[readonly] {
            border-bottom: none;
            background-color: transparent;
        }
    }
}
button, input[type=submit] {
    @include button();
    @include light-button();
}

@keyframes backandforth {
    from {
        padding-left: 0;
    }
    to {
        padding-left: calc(100% - 3rem);
    }
}
progress {
    -webkit-appearance: none;
    background: $background-light;
    border-radius: 0.1rem;

    &::-webkit-progress-bar {
        background: $background-light;
    }
    &::-webkit-progress-value {
        background: $color-blue;
        border-radius: 0.1rem;
        background-size: 35px 20px, 100% 100%, 100% 100%;
    }
    &:not([value]) {
        margin: 0;
        animation: backandforth 1s ease-in-out infinite alternate;
        &::-webkit-progress-value {
            width: 3rem !important;
        }
    }
}

.button-dock {
    position: relative;
}
.docked-buttons {
    position: absolute;
    right: 0;
    top: 0;
}
